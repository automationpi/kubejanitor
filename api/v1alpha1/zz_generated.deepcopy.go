//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2024 AutomationPI.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfig) DeepCopyInto(out *BackupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfig.
func (in *BackupConfig) DeepCopy() *BackupConfig {
	if in == nil {
		return nil
	}
	out := new(BackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CleanupConfig) DeepCopyInto(out *CleanupConfig) {
	*out = *in
	if in.PVC != nil {
		in, out := &in.PVC, &out.PVC
		*out = new(PVCCleanupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(JobsCleanupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = new(ConfigMapsCleanupConfig)
		**out = **in
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = new(SecretsCleanupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = new(ServicesCleanupConfig)
		**out = **in
	}
	if in.TLSSecrets != nil {
		in, out := &in.TLSSecrets, &out.TLSSecrets
		*out = new(TLSSecretsCleanupConfig)
		**out = **in
	}
	if in.TerminatingPods != nil {
		in, out := &in.TerminatingPods, &out.TerminatingPods
		*out = new(TerminatingPodsCleanupConfig)
		**out = **in
	}
	if in.StaleHelmReleases != nil {
		in, out := &in.StaleHelmReleases, &out.StaleHelmReleases
		*out = new(StaleHelmReleasesCleanupConfig)
		**out = **in
	}
	if in.ResourceGaps != nil {
		in, out := &in.ResourceGaps, &out.ResourceGaps
		*out = new(ResourceGapsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CrashLoopPods != nil {
		in, out := &in.CrashLoopPods, &out.CrashLoopPods
		*out = new(CrashLoopPodsConfig)
		**out = **in
	}
	if in.RBACCheck != nil {
		in, out := &in.RBACCheck, &out.RBACCheck
		*out = new(RBACCheckConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CleanupConfig.
func (in *CleanupConfig) DeepCopy() *CleanupConfig {
	if in == nil {
		return nil
	}
	out := new(CleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CleanupStats) DeepCopyInto(out *CleanupStats) {
	*out = *in
	if in.ByResourceType != nil {
		in, out := &in.ByResourceType, &out.ByResourceType
		*out = make(map[string]ResourceTypeStats, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CleanupStats.
func (in *CleanupStats) DeepCopy() *CleanupStats {
	if in == nil {
		return nil
	}
	out := new(CleanupStats)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapsCleanupConfig) DeepCopyInto(out *ConfigMapsCleanupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapsCleanupConfig.
func (in *ConfigMapsCleanupConfig) DeepCopy() *ConfigMapsCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigMapsCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashLoopPodsConfig) DeepCopyInto(out *CrashLoopPodsConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashLoopPodsConfig.
func (in *CrashLoopPodsConfig) DeepCopy() *CrashLoopPodsConfig {
	if in == nil {
		return nil
	}
	out := new(CrashLoopPodsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailConfig) DeepCopyInto(out *EmailConfig) {
	*out = *in
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailConfig.
func (in *EmailConfig) DeepCopy() *EmailConfig {
	if in == nil {
		return nil
	}
	out := new(EmailConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JanitorPolicy) DeepCopyInto(out *JanitorPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JanitorPolicy.
func (in *JanitorPolicy) DeepCopy() *JanitorPolicy {
	if in == nil {
		return nil
	}
	out := new(JanitorPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JanitorPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JanitorPolicyList) DeepCopyInto(out *JanitorPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JanitorPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JanitorPolicyList.
func (in *JanitorPolicyList) DeepCopy() *JanitorPolicyList {
	if in == nil {
		return nil
	}
	out := new(JanitorPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JanitorPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JanitorPolicySpec) DeepCopyInto(out *JanitorPolicySpec) {
	*out = *in
	in.Cleanup.DeepCopyInto(&out.Cleanup)
	if in.ProtectedLabels != nil {
		in, out := &in.ProtectedLabels, &out.ProtectedLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IgnoreNamespaces != nil {
		in, out := &in.IgnoreNamespaces, &out.IgnoreNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = new(BackupConfig)
		**out = **in
	}
	if in.NotificationConfig != nil {
		in, out := &in.NotificationConfig, &out.NotificationConfig
		*out = new(NotificationConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JanitorPolicySpec.
func (in *JanitorPolicySpec) DeepCopy() *JanitorPolicySpec {
	if in == nil {
		return nil
	}
	out := new(JanitorPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JanitorPolicyStatus) DeepCopyInto(out *JanitorPolicyStatus) {
	*out = *in
	if in.LastRun != nil {
		in, out := &in.LastRun, &out.LastRun
		*out = (*in).DeepCopy()
	}
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.Stats != nil {
		in, out := &in.Stats, &out.Stats
		*out = new(CleanupStats)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JanitorPolicyStatus.
func (in *JanitorPolicyStatus) DeepCopy() *JanitorPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(JanitorPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsCleanupConfig) DeepCopyInto(out *JobsCleanupConfig) {
	*out = *in
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.KeepSuccessfulJobs != nil {
		in, out := &in.KeepSuccessfulJobs, &out.KeepSuccessfulJobs
		*out = new(int32)
		**out = **in
	}
	if in.KeepFailedJobs != nil {
		in, out := &in.KeepFailedJobs, &out.KeepFailedJobs
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsCleanupConfig.
func (in *JobsCleanupConfig) DeepCopy() *JobsCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(JobsCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfig) DeepCopyInto(out *NotificationConfig) {
	*out = *in
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = new(SlackConfig)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(EmailConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = new(WebhookConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfig.
func (in *NotificationConfig) DeepCopy() *NotificationConfig {
	if in == nil {
		return nil
	}
	out := new(NotificationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PVCCleanupConfig) DeepCopyInto(out *PVCCleanupConfig) {
	*out = *in
	if in.IgnorePatterns != nil {
		in, out := &in.IgnorePatterns, &out.IgnorePatterns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PVCCleanupConfig.
func (in *PVCCleanupConfig) DeepCopy() *PVCCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(PVCCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RBACCheckConfig) DeepCopyInto(out *RBACCheckConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RBACCheckConfig.
func (in *RBACCheckConfig) DeepCopy() *RBACCheckConfig {
	if in == nil {
		return nil
	}
	out := new(RBACCheckConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGapsConfig) DeepCopyInto(out *ResourceGapsConfig) {
	*out = *in
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGapsConfig.
func (in *ResourceGapsConfig) DeepCopy() *ResourceGapsConfig {
	if in == nil {
		return nil
	}
	out := new(ResourceGapsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTypeStats) DeepCopyInto(out *ResourceTypeStats) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTypeStats.
func (in *ResourceTypeStats) DeepCopy() *ResourceTypeStats {
	if in == nil {
		return nil
	}
	out := new(ResourceTypeStats)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsCleanupConfig) DeepCopyInto(out *SecretsCleanupConfig) {
	*out = *in
	if in.ExcludeTypes != nil {
		in, out := &in.ExcludeTypes, &out.ExcludeTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsCleanupConfig.
func (in *SecretsCleanupConfig) DeepCopy() *SecretsCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(SecretsCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesCleanupConfig) DeepCopyInto(out *ServicesCleanupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesCleanupConfig.
func (in *ServicesCleanupConfig) DeepCopy() *ServicesCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(ServicesCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackConfig) DeepCopyInto(out *SlackConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackConfig.
func (in *SlackConfig) DeepCopy() *SlackConfig {
	if in == nil {
		return nil
	}
	out := new(SlackConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaleHelmReleasesCleanupConfig) DeepCopyInto(out *StaleHelmReleasesCleanupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaleHelmReleasesCleanupConfig.
func (in *StaleHelmReleasesCleanupConfig) DeepCopy() *StaleHelmReleasesCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(StaleHelmReleasesCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSecretsCleanupConfig) DeepCopyInto(out *TLSSecretsCleanupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSecretsCleanupConfig.
func (in *TLSSecretsCleanupConfig) DeepCopy() *TLSSecretsCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(TLSSecretsCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminatingPodsCleanupConfig) DeepCopyInto(out *TerminatingPodsCleanupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminatingPodsCleanupConfig.
func (in *TerminatingPodsCleanupConfig) DeepCopy() *TerminatingPodsCleanupConfig {
	if in == nil {
		return nil
	}
	out := new(TerminatingPodsCleanupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookConfig) DeepCopyInto(out *WebhookConfig) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookConfig.
func (in *WebhookConfig) DeepCopy() *WebhookConfig {
	if in == nil {
		return nil
	}
	out := new(WebhookConfig)
	in.DeepCopyInto(out)
	return out
}
