name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: make test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./cover.out
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.54
        args: --timeout=5m

  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.3'

    - name: Lint Helm chart
      run: |
        helm lint helm-charts/kubejanitor-operator
        helm template kubejanitor helm-charts/kubejanitor-operator --debug > /dev/null

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build binary
      run: make build

    - name: Build Docker image
      run: make docker-build IMG=kubejanitor:${{ github.sha }}

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Create kind cluster
      uses: helm/kind-action@v1.10.0
      with:
        cluster_name: kubejanitor-test
        config: test/testdata/kind-config.yaml

    - name: Build and load Docker image
      run: |
        make docker-build IMG=kubejanitor:test
        kind load docker-image kubejanitor:test --name kubejanitor-test

    - name: Deploy CRDs
      run: make install

    - name: Wait for cluster to be ready
      run: |
        kubectl wait --for=condition=Ready nodes --all --timeout=300s
        kubectl cluster-info

    - name: Run E2E tests
      run: make test-e2e

    - name: Debug on failure
      if: failure()
      run: |
        echo "=== Cluster Info ==="
        kubectl cluster-info
        echo "=== All Pods ==="
        kubectl get pods -A
        echo "=== All Events ==="
        kubectl get events -A --sort-by='.lastTimestamp'